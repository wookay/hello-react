{"version":3,"sources":["pages/Home.js","pages/About.js","components/Menu.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Home","About","match","params","name","Menu","to","tojson","JSON","stringify","Comma","Component","하더놈","this","props","prop1","prop2","isundef","undefined","prop3","defaultProps","App","className","exact","path","component","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAYeA,EAVF,WACT,OACI,8BACI,2CCKGC,EARD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,8BACI,wCAAWA,EAAMC,OAAOC,W,OCWrBC,EAbF,WACT,OACI,gCACI,+BACI,6BAAI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,SAAT,qBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,aAAT,4BAER,2BCXG,MAA0B,iCCQnCC,G,MAASC,KAAKC,WAEdC,E,4JACJ,WACE,MACE,S,GAHcC,aAQdC,E,4JACJ,WACE,MAAgCC,KAAKC,MAA7BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACTC,OAAmBC,GADzB,EAAsBC,MAEtB,OACI,uDAEIZ,EAAOQ,GAFX,KAEqB,cAAC,EAAD,IACjBR,EAAOS,GAHX,KAGqB,cAAC,EAAD,IACjBT,EAAOU,U,GATDN,aAelBC,EAAIQ,aAAe,CACfL,MAAO,IACPC,MAAO,CAAC,EAAE,EAAE,GACZG,WAAOD,G,IA0DIG,E,4JA/Bb,WACE,OACA,sBAAKC,UAAU,MAAf,UACA,gCACY,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzB,IACjC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwB,KAAK,eAAeC,UAAWxB,IACtC,cAAC,IAAD,CAAOuB,KAAK,SAASC,UAAWxB,UAG9C,yBAAQqB,UAAU,aAAlB,UACE,qBAAKI,IAAKC,EAAML,UAAU,WAAWM,IAAI,SACzC,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAKb,MAAO,KAAMC,MAAO,CAAC,EAAE,EAAE,GAAIG,MAAO,aAE3C,mBACEG,UAAU,WACVO,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,mC,GAlBUpB,aClDHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f3612dae.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n    return (\n        <div>\n            <h2>\n                홈\n            </h2>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst About = ({match}) => {\n    return (\n        <div>\n            <h2>About {match.params.name}</h2>\n        </div>\n    );\n};\n\nexport default About;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Menu = () => {\n    return (\n        <div>\n            <ul>\n                <li><Link to=\"/\">Home</Link></li>\n                <li><Link to=\"/about\">About</Link></li>\n                <li><Link to=\"/about/foo\">About Foo</Link></li>\n            </ul>\n            <hr/>\n        </div>\n    );\n};\n\nexport default Menu;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { PropTypes } from 'prop-types'\nimport { Home, About } from './pages';\nimport Menu from './components/Menu';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst tojson = JSON.stringify;\n\nclass Comma extends Component {\n  render() {\n    return (\n      \", \"\n    );\n  }\n}\n\nclass 하더놈 extends Component {\n  render() {\n    const { prop1, prop2, prop3 } = this.props;\n    const isundef = prop3 == undefined;\n    return (\n        <div>\n          하더놈 -\n          { tojson(prop1) }  <Comma />\n          { tojson(prop2) }  <Comma />\n          { tojson(isundef) }\n        </div>\n    );\n  }\n}\n\n하더놈.defaultProps = {\n    prop1: 100,\n    prop2: [5,6,7],\n    prop3: undefined\n}\n\n하더놈.propTypes = {\n    prop1: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    prop2: PropTypes.arrayOf(PropTypes.number),\n    prop3: PropTypes.any\n}\n\n/*\nhttps://blog.logrocket.com/validating-react-component-props-with-prop-types-ef14b29963fc/\nPropTypes.any\nPropTypes.bool\nPropTypes.number\nPropTypes.string\nPropTypes.func\nPropTypes.array\nPropTypes.object\nPropTypes.symbol\nPropTypes.node : The prop should be anything that can be rendered by React — a number, string, element, or array (or fragment) containing these types\nPropTypes.element : The prop should be a React element\nPropTypes.instanceOf\nPropTypes.oneOf\nPropTypes.oneOfType\n*/\n\nclass App extends Component {\n  render() {\n    return (\n    <div className=\"App\">\n    <div>\n                <Menu/>\n                <Route exact path=\"/\" component={Home}/>\n                <Switch>\n                    <Route path=\"/about/:name\" component={About}/>\n                    <Route path=\"/about\" component={About}/>\n                </Switch>\n    </div>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div>\n          <하더놈 />\n          <하더놈 prop1={\"ok\"} prop2={[1,2,3]} prop3={\"prop3\"} />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}